// automatically generated by the FlatBuffers compiler, do not modify

package com.flipkart.vbroker.entities;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class GetSubscriptionsRequest extends Table {
  public static GetSubscriptionsRequest getRootAsGetSubscriptionsRequest(ByteBuffer _bb) { return getRootAsGetSubscriptionsRequest(_bb, new GetSubscriptionsRequest()); }
  public static GetSubscriptionsRequest getRootAsGetSubscriptionsRequest(ByteBuffer _bb, GetSubscriptionsRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public GetSubscriptionsRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public TopicSubscription subscriptions(int j) { return subscriptions(new TopicSubscription(), j); }
  public TopicSubscription subscriptions(TopicSubscription obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int subscriptionsLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }

  public static int createGetSubscriptionsRequest(FlatBufferBuilder builder,
      int subscriptionsOffset) {
    builder.startObject(1);
    GetSubscriptionsRequest.addSubscriptions(builder, subscriptionsOffset);
    return GetSubscriptionsRequest.endGetSubscriptionsRequest(builder);
  }

  public static void startGetSubscriptionsRequest(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addSubscriptions(FlatBufferBuilder builder, int subscriptionsOffset) { builder.addOffset(0, subscriptionsOffset, 0); }
  public static int createSubscriptionsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSubscriptionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endGetSubscriptionsRequest(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

