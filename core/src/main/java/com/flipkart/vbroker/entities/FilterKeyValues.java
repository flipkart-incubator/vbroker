// automatically generated by the FlatBuffers compiler, do not modify

package com.flipkart.vbroker.entities;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class FilterKeyValues extends Table {
    public static FilterKeyValues getRootAsFilterKeyValues(ByteBuffer _bb) {
        return getRootAsFilterKeyValues(_bb, new FilterKeyValues());
    }

    public static FilterKeyValues getRootAsFilterKeyValues(ByteBuffer _bb, FilterKeyValues obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public static int createFilterKeyValues(FlatBufferBuilder builder,
                                            int keyOffset,
                                            int valuesOffset) {
        builder.startObject(2);
        FilterKeyValues.addValues(builder, valuesOffset);
        FilterKeyValues.addKey(builder, keyOffset);
        return FilterKeyValues.endFilterKeyValues(builder);
    }

    public static void startFilterKeyValues(FlatBufferBuilder builder) {
        builder.startObject(2);
    }

    public static void addKey(FlatBufferBuilder builder, int keyOffset) {
        builder.addOffset(0, keyOffset, 0);
    }

    public static void addValues(FlatBufferBuilder builder, int valuesOffset) {
        builder.addOffset(1, valuesOffset, 0);
    }

    public static int endFilterKeyValues(FlatBufferBuilder builder) {
        int o = builder.endObject();
        return o;
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
    }

    public FilterKeyValues __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public String key() {
        int o = __offset(4);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer keyAsByteBuffer() {
        return __vector_as_bytebuffer(4, 1);
    }

    public String values() {
        int o = __offset(6);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer valuesAsByteBuffer() {
        return __vector_as_bytebuffer(6, 1);
    }
}

