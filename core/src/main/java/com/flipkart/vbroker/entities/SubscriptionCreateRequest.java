// automatically generated by the FlatBuffers compiler, do not modify

package com.flipkart.vbroker.entities;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class SubscriptionCreateRequest extends Table {
    public static SubscriptionCreateRequest getRootAsSubscriptionCreateRequest(ByteBuffer _bb) {
        return getRootAsSubscriptionCreateRequest(_bb, new SubscriptionCreateRequest());
    }

    public static SubscriptionCreateRequest getRootAsSubscriptionCreateRequest(ByteBuffer _bb, SubscriptionCreateRequest obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public static int createSubscriptionCreateRequest(FlatBufferBuilder builder,
                                                      int subscriptionOffset) {
        builder.startObject(1);
        SubscriptionCreateRequest.addSubscription(builder, subscriptionOffset);
        return SubscriptionCreateRequest.endSubscriptionCreateRequest(builder);
    }

    public static void startSubscriptionCreateRequest(FlatBufferBuilder builder) {
        builder.startObject(1);
    }

    public static void addSubscription(FlatBufferBuilder builder, int subscriptionOffset) {
        builder.addOffset(0, subscriptionOffset, 0);
    }

    public static int endSubscriptionCreateRequest(FlatBufferBuilder builder) {
        int o = builder.endObject();
        return o;
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
    }

    public SubscriptionCreateRequest __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public Subscription subscription() {
        return subscription(new Subscription());
    }

    public Subscription subscription(Subscription obj) {
        int o = __offset(4);
        return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null;
    }
}

