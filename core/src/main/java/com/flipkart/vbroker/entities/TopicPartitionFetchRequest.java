// automatically generated by the FlatBuffers compiler, do not modify

package com.flipkart.vbroker.entities;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TopicPartitionFetchRequest extends Table {
  public static TopicPartitionFetchRequest getRootAsTopicPartitionFetchRequest(ByteBuffer _bb) { return getRootAsTopicPartitionFetchRequest(_bb, new TopicPartitionFetchRequest()); }
  public static TopicPartitionFetchRequest getRootAsTopicPartitionFetchRequest(ByteBuffer _bb, TopicPartitionFetchRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public TopicPartitionFetchRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short partitionId() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public short noOfMessages() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) : 0; }

  public static int createTopicPartitionFetchRequest(FlatBufferBuilder builder,
      short partitionId,
      short noOfMessages) {
    builder.startObject(2);
    TopicPartitionFetchRequest.addNoOfMessages(builder, noOfMessages);
    TopicPartitionFetchRequest.addPartitionId(builder, partitionId);
    return TopicPartitionFetchRequest.endTopicPartitionFetchRequest(builder);
  }

  public static void startTopicPartitionFetchRequest(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addPartitionId(FlatBufferBuilder builder, short partitionId) { builder.addShort(0, partitionId, 0); }
  public static void addNoOfMessages(FlatBufferBuilder builder, short noOfMessages) { builder.addShort(1, noOfMessages, 0); }
  public static int endTopicPartitionFetchRequest(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

