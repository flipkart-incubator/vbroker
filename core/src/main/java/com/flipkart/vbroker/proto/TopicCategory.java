// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entities.proto

package com.flipkart.vbroker.proto;

/**
 * <pre>
 * common entities
 * </pre>
 * <p>
 * Protobuf enum {@code proto.TopicCategory}
 */
public enum TopicCategory
    implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>QUEUE = 0;</code>
     */
    QUEUE(0),
    /**
     * <code>TOPIC = 1;</code>
     */
    TOPIC(1),
    UNRECOGNIZED(-1),;

    /**
     * <code>QUEUE = 0;</code>
     */
    public static final int QUEUE_VALUE = 0;
    /**
     * <code>TOPIC = 1;</code>
     */
    public static final int TOPIC_VALUE = 1;
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TopicCategory> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TopicCategory>() {
            public TopicCategory findValueByNumber(int number) {
                return TopicCategory.forNumber(number);
            }
        };
    private static final TopicCategory[] VALUES = values();
    private final int value;

    private TopicCategory(int value) {
        this.value = value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TopicCategory valueOf(int value) {
        return forNumber(value);
    }

    public static TopicCategory forNumber(int value) {
        switch (value) {
            case 0:
                return QUEUE;
            case 1:
                return TOPIC;
            default:
                return null;
        }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TopicCategory>
    internalGetValueMap() {
        return internalValueMap;
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
        return com.flipkart.vbroker.proto.PEntities.getDescriptor().getEnumTypes().get(0);
    }

    public static TopicCategory valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
    }

    public final int getNumber() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
        }
        return value;
    }

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
        return getDescriptor();
    }

    // @@protoc_insertion_point(enum_scope:proto.TopicCategory)
}

