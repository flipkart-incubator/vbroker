// automatically generated by the FlatBuffers compiler, do not modify

package com.flipkart.vbroker.entities;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class TopicFetchResponse extends Table {
    public static TopicFetchResponse getRootAsTopicFetchResponse(ByteBuffer _bb) {
        return getRootAsTopicFetchResponse(_bb, new TopicFetchResponse());
    }

    public static TopicFetchResponse getRootAsTopicFetchResponse(ByteBuffer _bb, TopicFetchResponse obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public static int createTopicFetchResponse(FlatBufferBuilder builder,
                                               short topicId,
                                               int partitionResponsesOffset) {
        builder.startObject(2);
        TopicFetchResponse.addPartitionResponses(builder, partitionResponsesOffset);
        TopicFetchResponse.addTopicId(builder, topicId);
        return TopicFetchResponse.endTopicFetchResponse(builder);
    }

    public static void startTopicFetchResponse(FlatBufferBuilder builder) {
        builder.startObject(2);
    }

    public static void addTopicId(FlatBufferBuilder builder, short topicId) {
        builder.addShort(0, topicId, 0);
    }

    public static void addPartitionResponses(FlatBufferBuilder builder, int partitionResponsesOffset) {
        builder.addOffset(1, partitionResponsesOffset, 0);
    }

    public static int createPartitionResponsesVector(FlatBufferBuilder builder, int[] data) {
        builder.startVector(4, data.length, 4);
        for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]);
        return builder.endVector();
    }

    public static void startPartitionResponsesVector(FlatBufferBuilder builder, int numElems) {
        builder.startVector(4, numElems, 4);
    }

    public static int endTopicFetchResponse(FlatBufferBuilder builder) {
        int o = builder.endObject();
        return o;
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
    }

    public TopicFetchResponse __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public short topicId() {
        int o = __offset(4);
        return o != 0 ? bb.getShort(o + bb_pos) : 0;
    }

    public TopicPartitionFetchResponse partitionResponses(int j) {
        return partitionResponses(new TopicPartitionFetchResponse(), j);
    }

    public TopicPartitionFetchResponse partitionResponses(TopicPartitionFetchResponse obj, int j) {
        int o = __offset(6);
        return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null;
    }

    public int partitionResponsesLength() {
        int o = __offset(6);
        return o != 0 ? __vector_len(o) : 0;
    }
}

