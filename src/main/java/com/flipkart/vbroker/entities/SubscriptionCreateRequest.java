// automatically generated by the FlatBuffers compiler, do not modify

package com.flipkart.vbroker.entities;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class SubscriptionCreateRequest extends Table {
    public static SubscriptionCreateRequest getRootAsSubscriptionCreateRequest(ByteBuffer _bb) {
        return getRootAsSubscriptionCreateRequest(_bb, new SubscriptionCreateRequest());
    }

    public static SubscriptionCreateRequest getRootAsSubscriptionCreateRequest(ByteBuffer _bb, SubscriptionCreateRequest obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public static int createSubscriptionCreateRequest(FlatBufferBuilder builder,
                                                      short subscriptionId,
                                                      short topicId,
                                                      int teamOffset,
                                                      int nameOffset,
                                                      boolean grouped) {
        builder.startObject(5);
        SubscriptionCreateRequest.addName(builder, nameOffset);
        SubscriptionCreateRequest.addTeam(builder, teamOffset);
        SubscriptionCreateRequest.addTopicId(builder, topicId);
        SubscriptionCreateRequest.addSubscriptionId(builder, subscriptionId);
        SubscriptionCreateRequest.addGrouped(builder, grouped);
        return SubscriptionCreateRequest.endSubscriptionCreateRequest(builder);
    }

    public static void startSubscriptionCreateRequest(FlatBufferBuilder builder) {
        builder.startObject(5);
    }

    public static void addSubscriptionId(FlatBufferBuilder builder, short subscriptionId) {
        builder.addShort(0, subscriptionId, 0);
    }

    public static void addTopicId(FlatBufferBuilder builder, short topicId) {
        builder.addShort(1, topicId, 0);
    }

    public static void addTeam(FlatBufferBuilder builder, int teamOffset) {
        builder.addOffset(2, teamOffset, 0);
    }

    public static void addName(FlatBufferBuilder builder, int nameOffset) {
        builder.addOffset(3, nameOffset, 0);
    }

    public static void addGrouped(FlatBufferBuilder builder, boolean grouped) {
        builder.addBoolean(4, grouped, false);
    }

    public static int endSubscriptionCreateRequest(FlatBufferBuilder builder) {
        int o = builder.endObject();
        return o;
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
    }

    public SubscriptionCreateRequest __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public short subscriptionId() {
        int o = __offset(4);
        return o != 0 ? bb.getShort(o + bb_pos) : 0;
    }

    public short topicId() {
        int o = __offset(6);
        return o != 0 ? bb.getShort(o + bb_pos) : 0;
    }

    public String team() {
        int o = __offset(8);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer teamAsByteBuffer() {
        return __vector_as_bytebuffer(8, 1);
    }

    public String name() {
        int o = __offset(10);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer nameAsByteBuffer() {
        return __vector_as_bytebuffer(10, 1);
    }

    public boolean grouped() {
        int o = __offset(12);
        return o != 0 ? 0 != bb.get(o + bb_pos) : false;
    }
}

